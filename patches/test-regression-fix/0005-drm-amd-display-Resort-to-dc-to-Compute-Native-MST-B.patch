From a708c33835228d496ef163ab5536cb697796612e Mon Sep 17 00:00:00 2001
From: Fangzhi Zuo <Jerry.Zuo@amd.com>
Date: Wed, 18 Dec 2024 17:01:08 -0500
Subject: [PATCH 5/5] drm/amd/display: Resort to dc to Compute Native MST BW

Signed-off-by: Fangzhi Zuo <Jerry.Zuo@amd.com>
---
 .../gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c | 61 +++----------------
 .../display/amdgpu_dm/amdgpu_dm_mst_types.c   | 59 ++++++++++++++++++
 .../display/amdgpu_dm/amdgpu_dm_mst_types.h   |  2 +
 3 files changed, 69 insertions(+), 53 deletions(-)

diff --git a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
index be265d807463..8ed0fac9098b 100644
--- a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
+++ b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
@@ -7571,53 +7571,6 @@ static int dm_encoder_helper_atomic_check(struct drm_encoder *encoder,
 					  struct drm_crtc_state *crtc_state,
 					  struct drm_connector_state *conn_state)
 {
-	struct drm_atomic_state *state = crtc_state->state;
-	struct drm_connector *connector = conn_state->connector;
-	struct amdgpu_dm_connector *aconnector = to_amdgpu_dm_connector(connector);
-	struct dm_connector_state *dm_new_connector_state = to_dm_connector_state(conn_state);
-	const struct drm_display_mode *adjusted_mode = &crtc_state->adjusted_mode;
-	struct drm_dp_mst_topology_mgr *mst_mgr;
-	struct drm_dp_mst_port *mst_port;
-	struct drm_dp_mst_topology_state *mst_state;
-	enum dc_color_depth color_depth;
-	int clock, bpp = 0;
-	bool is_y420 = false;
-
-	if (!aconnector->mst_output_port)
-		return 0;
-
-	mst_port = aconnector->mst_output_port;
-	mst_mgr = &aconnector->mst_root->mst_mgr;
-
-	if (!crtc_state->connectors_changed && !crtc_state->mode_changed)
-		return 0;
-
-	mst_state = drm_atomic_get_mst_topology_state(state, mst_mgr);
-	if (IS_ERR(mst_state))
-		return PTR_ERR(mst_state);
-
-	mst_state->pbn_div.full = dfixed_const(dm_mst_get_pbn_divider(aconnector->mst_root->dc_link));
-
-	if (!state->duplicated) {
-		int max_bpc = conn_state->max_requested_bpc;
-
-		is_y420 = drm_mode_is_420_also(&connector->display_info, adjusted_mode) &&
-			  aconnector->force_yuv420_output;
-		color_depth = convert_color_depth_from_display_info(connector,
-								    is_y420,
-								    max_bpc);
-		bpp = convert_dc_color_depth_into_bpc(color_depth) * 3;
-		clock = adjusted_mode->clock;
-		dm_new_connector_state->pbn = drm_dp_calc_pbn_mode(clock, bpp << 4);
-	}
-
-	dm_new_connector_state->vcpi_slots =
-		drm_dp_atomic_find_time_slots(state, mst_mgr, mst_port,
-					      dm_new_connector_state->pbn);
-	if (dm_new_connector_state->vcpi_slots < 0) {
-		DRM_DEBUG_ATOMIC("failed finding vcpi slots: %d\n", (int)dm_new_connector_state->vcpi_slots);
-		return dm_new_connector_state->vcpi_slots;
-	}
 	return 0;
 }
 
@@ -11766,6 +11719,8 @@ static int amdgpu_dm_atomic_check(struct drm_device *dev,
 			goto fail;
 		}
 
+		compute_mst_native_bw(state, dm_state->context);
+
 #if defined(CONFIG_DRM_AMD_DC_FP)
 		if (dc_resource_is_dsc_encoding_supported(dc)) {
 			ret = compute_mst_dsc_configs_for_state(state, dm_state->context, vars);
@@ -11774,14 +11729,14 @@ static int amdgpu_dm_atomic_check(struct drm_device *dev,
 				ret = -EINVAL;
 				goto fail;
 			}
-		}
-#endif
 
-		ret = dm_update_mst_vcpi_slots_for_dsc(state, dm_state->context, vars);
-		if (ret) {
-			drm_dbg_atomic(dev, "dm_update_mst_vcpi_slots_for_dsc() failed\n");
-			goto fail;
+			ret = dm_update_mst_vcpi_slots_for_dsc(state, dm_state->context, vars);
+			if (ret) {
+				drm_dbg_atomic(dev, "dm_update_mst_vcpi_slots_for_dsc() failed\n");
+				goto fail;
+			}
 		}
+#endif
 
 		/*
 		 * Perform validation of MST topology in the state:
diff --git a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_mst_types.c b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_mst_types.c
index 6c75ed62cfc8..3b9804a1798d 100644
--- a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_mst_types.c
+++ b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_mst_types.c
@@ -1400,6 +1400,65 @@ static bool is_dsc_need_re_compute(
 	return is_dsc_need_re_compute;
 }
 
+void compute_mst_native_bw(struct drm_atomic_state *state, struct dc_state *dc_state)
+{
+	int i;
+	struct dc_stream_state *stream;
+	struct amdgpu_dm_connector *aconnector;
+	struct drm_connector_state *new_conn_state;
+	struct dm_connector_state *dm_new_connector_state;
+	struct drm_dp_mst_topology_state *mst_state;
+	uint8_t encoding_format;
+	uint32_t stream_kbps;
+
+	for (i = 0; i < dc_state->stream_count; i++) {
+		stream = dc_state->streams[i];
+
+		if (stream->signal != SIGNAL_TYPE_DISPLAY_PORT_MST)
+			continue;
+
+		aconnector = (struct amdgpu_dm_connector *)stream->dm_stream_context;
+
+		DRM_DEBUG_DRIVER("%s: MST_DSC compute mst dsc configs for stream #%d - 0x%p, aconnector 0x%p\n",
+				__func__, i, stream, aconnector);
+
+		if (!aconnector || !aconnector->dc_sink || !aconnector->mst_output_port)
+			continue;
+
+		mst_state = drm_atomic_get_mst_topology_state(state, &aconnector->mst_root->mst_mgr);
+		if (IS_ERR(mst_state)) {
+			DRM_DEBUG_DRIVER("%s: MST_DSC no valid mst_state found in topology\n", __func__);
+			return;
+		}
+
+		mst_state->pbn_div.full = dfixed_const(dm_mst_get_pbn_divider(aconnector->mst_root->dc_link));
+
+		new_conn_state = drm_atomic_get_new_connector_state(state, &aconnector->base);
+
+		if (!new_conn_state) {
+			DRM_DEBUG_DRIVER("%s:%d MST_DSC Skip the stream 0x%p with invalid new_conn_state\n",
+					__func__, __LINE__, stream);
+			continue;
+		}
+
+		dm_new_connector_state = to_dm_connector_state(new_conn_state);
+
+		encoding_format = dc_link_get_highest_encoding_format(aconnector->dc_link);
+		stream_kbps = dc_bandwidth_in_kbps_from_timing(&stream->timing, encoding_format);
+
+		dm_new_connector_state->pbn = kbps_to_pbn(stream_kbps, false);
+
+		dm_new_connector_state->vcpi_slots =
+		drm_dp_atomic_find_time_slots(state,
+					      &aconnector->mst_root->mst_mgr,
+					      aconnector->mst_output_port,
+					      dm_new_connector_state->pbn);
+
+		DRM_DEBUG_DRIVER("%s: MST_DSC stream #%d, pbn = %llu, pbn_div = %u, slot_num = %d\n",
+				__func__, i, dm_new_connector_state->pbn, mst_state->pbn_div.full, dm_new_connector_state->vcpi_slots);
+	}
+}
+
 int compute_mst_dsc_configs_for_state(struct drm_atomic_state *state,
 				      struct dc_state *dc_state,
 				      struct dsc_mst_fairness_vars *vars)
diff --git a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_mst_types.h b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_mst_types.h
index 600d6e221011..3a5feb47fed3 100644
--- a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_mst_types.h
+++ b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_mst_types.h
@@ -93,4 +93,6 @@ enum dc_status dm_dp_mst_is_port_support_mode(
 	struct amdgpu_dm_connector *aconnector,
 	struct dc_stream_state *stream);
 
+void compute_mst_native_bw(struct drm_atomic_state *state, struct dc_state *dc_state);
+
 #endif
-- 
2.43.0

