# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/8df44455-d863-4dea-b470-af38b1ecfdc9";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-bf49a9f4-8c64-40d7-841e-f90331ce0c9b".device = "/dev/disk/by-uuid/bf49a9f4-8c64-40d7-841e-f90331ce0c9b";
  boot.initrd.luks.devices."luks-31f65682-658f-485f-b65d-c0495d68971d".device = "/dev/disk/by-uuid/31f65682-658f-485f-b65d-c0495d68971d";

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/5856-3A47";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/fdd7cd38-e98c-44ab-b665-5e75bbad9d1a"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
